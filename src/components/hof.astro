---
import { data } from "../utils/read_csv.ts";
import EventRows from "@components/events.astro";

// to add a new year add it to this array, this is used to display buttons, and the past events of that year.
const years = [
  2025, 2024, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015,
];

const current_year = years[0];
---

<style>
  .table-alternate tbody tr:nth-child(odd) {
    background-color: #f9f9f9; /* Light gray for odd rows */
  }
  .table-alternate tbody tr:nth-child(even) {
    background-color: #ffffff; /* White for even rows */
  }

  .table-hover tbody tr:hover {
    background-color: #e9e9e9; /* Slightly toned gray on hover */
  }
</style>

<div
  class="hidden sm:block mx-auto w-full lg:px-24 max-w-7xl md:px-12 items-center px-8 mb-12 scroll-mt-12"
>
  <!-- tables start -->
  <div class="relative overflow-x-auto">
    <!-- single table element -->
    {
      years.map((year) => (
        // include condition where if year == current_year, then  class="table-content" class = "hidden table-content"
        <div
          id={`page-${year}`}
          class={
            year === current_year ? "table-content" : "hidden table-content"
          }
        >
          <div class="mt-6 justify-center mb-16 flex flex-col sm:flex-row gap-3">
            <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight">
              Past Events {year}
            </h2>
          </div>
          <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400 table-hover">
            <thead class="text-xs text-gray-700 uppercase bg-gray-100 dark:bg-gray-700 dark:text-gray-400">
              <tr>
                <th scope="col" class="px-6 py-3 topic-col">
                  Topic
                </th>
                <th scope="col" class="px-6 py-3">
                  Host
                </th>
                <th scope="col" class="px-6 py-3">
                  Speakers
                </th>
                <th scope="col" class="px-6 py-3">
                  Slides
                </th>
              </tr>
            </thead>
            <tbody>
              {data
                .filter((meetup) => meetup.year === year)
                .map((Event) => (
                  <EventRows
                    Topic={Event.Topic}
                    Host={Event.Host}
                    Speakers={Event.Speakers}
                    Slides={Event.Slides}
                  />
                ))}
            </tbody>
          </table>
        </div>
      ))
    }
  </div>
</div>
<!-- table end -->

<div class="hidden sm:flex justify-center space-x-2 mb-16">
  {
    years.map((year) => (
      <button class="page-button" data-page={year}>
        {year}
      </button>
    ))
  }
</div>
<div class="md:hidden space-x-2 mb-16">
  <h2 class="text-2xl">Missing Content?</h2>
  Please note that we do not display a comprehensive table of past events on small
  screens.
</div>

<script>
  function showPage(page: number): void {
    const tableContents: NodeListOf<HTMLElement> =
      document.querySelectorAll(".table-content");
    tableContents.forEach((table) => {
      table.classList.add("hidden");
    });

    const selectedTable = document.getElementById(`page-${page}`);
    if (selectedTable) {
      selectedTable.classList.remove("hidden");
    }
  }

  // Adding event listeners to pagination buttons
  document.addEventListener("DOMContentLoaded", () => {
    const pageButtons = document.querySelectorAll(".page-button");
    pageButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const page = parseInt(
          (button as HTMLElement).dataset.page as string,
          10
        );
        showPage(page);
      });
    });
  });
</script>
